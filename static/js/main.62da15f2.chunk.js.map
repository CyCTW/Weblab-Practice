{"version":3,"sources":["utils.js","LoginPage/index.jsx","SignUpPage/index.jsx","components/Loading.jsx","UserPage/index.jsx","UserPage/Edit.jsx","components/MemberTabs.jsx","components/Nav.jsx","components/UserItem.jsx","UserListPage/index.jsx","App.jsx","index.js","icons/user.svg"],"names":["hostname","path","createNewLogin","data","a","axios","post","appId","response","createRemoteUserData","getRemoteUsersData","headers","Accept","get","getRemoteUserData","userId","updateRemoteUserData","authToken","Authorization","deleteRemoteUserData","console","log","delete","LoginPage","setSelectState","setIsLogin","setIsLoginPage","setAuthToken","setUserInfo","useEffect","useState","account","password","userInput","setUserInput","history","useHistory","toast","useToast","UIState","setUIState","direction","align","height","id","width","isRequired","type","placeholder","onChange","e","target","value","mt","colorScheme","isLoading","loadingText","disabled","onClick","then","res","result","Error","message","token","jwt","sub","username","localStorage","setItem","JSON","stringify","push","catch","err","title","description","status","duration","isClosable","position","callToast","SignUpPage","email","Loading","style","fontFamily","thickness","speed","emptyColor","color","size","UserPage","userInfo","useParams","pictureUrl","userData","setUserData","user","picture_url","isOpen","setIsOpen","cancelRef","React","useRef","onClose","src","userIcon","w","p","justify","m","leastDestructiveRef","fontSize","fontWeight","ref","clear","ml","UserPageEdit","usernameIsChange","setUsernameIsChange","hiddenFileInput","handleFile","fileo","files","reader","FileReader","onload","r","readAsDataURL","current","click","display","h","errorCode","MemberTabs","selectState","as","ReachLink","to","borderBottom","borderColor","_hover","Nav","isLogin","mb","bg","pt","UserItem","setSelectedId","key","border","boxShadow","rounded","boxSize","UserListPage","userList","setUserList","selectedId","map","App","showHeader","setShowHeader","localToken","getItem","localUserInfo","parse","exact","rootElement","document","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.62da15f2.chunk.js","sourcesContent":["import axios from \"axios\";\nconst memberHostname = \"https://api.weblab.tw/\";\nconst memberVersion = \"v1/\";\nconst memberLoginPath = \"auth/general-login\";\nconst memberCreatePath = \"auth/register\";\nconst hostname = \"https://weblab-react-special-midtern.herokuapp.com/\";\nconst version = \"v1/\";\nconst path = \"users/\";\n\n// success!\nexport const createNewLogin = async (data) => {\n  // 0616225, 123\n  const response = await axios.post(\n    `${memberHostname}${memberVersion}${memberLoginPath}`,\n    { ...data, appId: \"weblab\" }\n  );\n  return response;\n  // https://api.weblab.tw/v1/auth/general-login\n};\n\n// success!\nexport const createRemoteUserData = async (data) => {\n  const response = await axios.post(\n    `${memberHostname}${memberVersion}${memberCreatePath}`,\n    { ...data, appId: \"weblab\" }\n  );\n  return response;\n  // https://api.weblab.tw/v1/auth/register\n};\n\n// success !\nexport const getRemoteUsersData = async () => {\n  const headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  const response = await axios.get(`${hostname}${version}${path}`, { headers });\n  // https://weblab-react-special-midtern.herokuapp.com/v1/users/\n  return response;\n};\n\nexport const getRemoteUserData = async (userId) => {\n  const headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  const response = await axios.get(`${hostname}${version}${path}${userId}`, {\n    headers\n  });\n  // https://weblab-react-special-midtern.herokuapp.com/v1/users/:userId\n  return response;\n};\n\n// success !\nexport const updateRemoteUserData = async ({ data, userId, authToken }) => {\n  const headers = {\n    Authorization: `Bearer ${authToken}`\n  };\n\n  const response = await axios.post(\n    `${hostname}${version}${path}${userId}`,\n    data,\n    { headers }\n  );\n  // const response = await axios.delete(`${hostname}${userId}`, config);\n\n  // https://weblab-react-special-midtern.herokuapp.com/v1/users/:userId\n\n  return response;\n};\n\nexport const deleteRemoteUserData = async ({ userId, authToken }) => {\n  console.log(userId);\n  console.log(authToken);\n  const headers = {\n    Authorization: `Bearer ${authToken}`\n  };\n  const response = await axios.delete(\n    `\n    ${hostname}${version}${path}${userId}`,\n    {\n      headers\n    }\n  );\n  // https://weblab-react-special-midtern.herokuapp.com/v1/users/:userId\n\n  return response;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { FormControl, Input, Button, Flex, useToast } from \"@chakra-ui/react\";\nimport { createNewLogin } from \"../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport jwt from \"jwt-decode\";\n\nconst LoginPage = ({\n  setSelectState,\n  setIsLogin,\n  setIsLoginPage,\n  setAuthToken,\n  setUserInfo\n}) => {\n  useEffect(() => {\n    setSelectState(\"login\");\n  }, []);\n  const [userInput, setUserInput] = useState({\n    account: null,\n    password: null\n  });\n  const history = useHistory();\n  const toast = useToast();\n  const [UIState, setUIState] = useState(\"idle\");\n  // 3 states: idle, success, error\n  const handleLogin = () => {\n    setUIState(\"loading\");\n    const callToast = (err) => {\n      toast({\n        title: \"An error occurred!\",\n        description: `${err}`,\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top\"\n      });\n    };\n    createNewLogin(userInput)\n      .then((res) => {\n        console.log(res);\n        if (res.data.result === null) {\n          throw new Error(res.data.message);\n        }\n        const token = res.data.result.authToken;\n        setAuthToken(token);\n\n        const user = jwt(token);\n        const userId = user.sub;\n\n        setUIState(\"success\");\n        setIsLoginPage(false);\n        setIsLogin(true);\n        setUserInfo({\n          userId,\n          username: userInput.account\n        });\n        localStorage.setItem(\"token\", JSON.stringify(token));\n        localStorage.setItem(\n          \"userInfo\",\n          JSON.stringify({\n            userId,\n            username: userInput.account\n          })\n        );\n        history.push(`/users/`);\n        // history.push(`/users/`);\n      })\n      .catch((err) => {\n        console.log(err);\n        callToast(err);\n        setUIState(\"error\");\n      });\n  };\n  const handleAccount = (e) => {\n    setUserInput({\n      ...userInput,\n      account: e.target.value\n    });\n  };\n  const handlePassword = (e) => {\n    setUserInput({\n      ...userInput,\n      password: e.target.value\n    });\n  };\n  return (\n    <Flex direction=\"column\" align=\"center\" height=\"60vh\">\n      <FormControl id=\"username\" width=\"300px\" isRequired>\n        <Input\n          type=\"username\"\n          placeholder=\"使用者名稱\"\n          onChange={handleAccount}\n        />\n      </FormControl>\n      <FormControl id=\"password\" width=\"300px\" mt={5} isRequired>\n        <Input type=\"password\" placeholder=\"密碼\" onChange={handlePassword} />\n      </FormControl>\n\n      <Button\n        colorScheme=\"blue\"\n        isLoading={UIState === \"loading\"}\n        loadingText=\"Submitting\"\n        width=\"300px\"\n        mt={5}\n        disabled={!(userInput.account && userInput.password)}\n        onClick={handleLogin}\n      >\n        登入\n      </Button>\n    </Flex>\n  );\n};\n\nexport default LoginPage;\n","import React, { useState, useEffect } from \"react\";\nimport { FormControl, Input, Button, Flex, useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createRemoteUserData } from \"../utils\";\nimport jwt from \"jwt-decode\";\n\nconst SignUpPage = ({\n  setSelectState,\n  setIsLogin,\n  setIsLoginPage,\n  setAuthToken,\n  setUserInfo\n}) => {\n  useEffect(() => {\n    setSelectState(\"signup\");\n  }, []);\n  const history = useHistory();\n  // data\n  const [userInput, setUserInput] = useState({\n    email: null,\n    username: null,\n    password: null\n  });\n  const [UIState, setUIState] = useState(\"idle\");\n  const toast = useToast();\n\n  const handleSignUp = () => {\n    setUIState(\"loading\");\n    const callToast = (err) => {\n      toast({\n        title: \"An error occurred!\",\n        description: `${err}`,\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top\"\n      });\n    };\n    createRemoteUserData(userInput)\n      .then((res) => {\n        // deal with fail status\n        console.log(res);\n        if (res.data.result === null) {\n          throw new Error(res.data.message);\n        }\n        const token = res.data.result.authToken;\n        const user = jwt(token);\n        const userId = user.sub;\n        // console.log(res);\n        setAuthToken(token);\n        setUIState(\"success\");\n        setIsLoginPage(false);\n        setIsLogin(true);\n        setUserInfo({\n          userId,\n          username: userInput.username\n        });\n        localStorage.setItem(\"token\", JSON.stringify(token));\n        localStorage.setItem(\n          \"userInfo\",\n          JSON.stringify({\n            userId,\n            username: userInput.username\n          })\n        );\n        history.push(`/users/${userId}/edit`);\n      })\n      .catch((err) => {\n        console.log(err);\n        callToast(err);\n        setUIState(\"error\");\n      });\n  };\n  const handleEmail = (e) => {\n    setUserInput({\n      ...userInput,\n      email: e.target.value\n    });\n  };\n  const handleUsername = (e) => {\n    setUserInput({\n      ...userInput,\n      username: e.target.value\n    });\n  };\n  const handlePassword = (e) => {\n    setUserInput({\n      ...userInput,\n      password: e.target.value\n    });\n  };\n  return (\n    <>\n      <Flex direction=\"column\" align=\"center\" height=\"60vh\">\n        <FormControl id=\"email\" width=\"300px\" isRequired>\n          <Input type=\"email\" placeholder=\"電子信箱\" onChange={handleEmail} />\n        </FormControl>\n        <FormControl id=\"username\" width=\"300px\" mt={5} isRequired>\n          <Input\n            type=\"username\"\n            placeholder=\"使用者名稱\"\n            onChange={handleUsername}\n          />\n        </FormControl>\n        <FormControl id=\"password\" width=\"300px\" mt={5} isRequired>\n          <Input type=\"password\" placeholder=\"密碼\" onChange={handlePassword} />\n        </FormControl>\n\n        <Button\n          colorScheme=\"blue\"\n          isLoading={UIState === \"loading\"}\n          loadingText=\"Submitting\"\n          width=\"300px\"\n          mt={5}\n          onClick={handleSignUp}\n          disabled={\n            !(userInput.email && userInput.username && userInput.password)\n          }\n        >\n          加入\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Flex, Center, Spinner } from \"@chakra-ui/react\";\n\nconst Loading = () => {\n  return (\n    <>\n      <Flex direction=\"column\">\n        <Center mt={50}>\n          <h2 style={{ fontFamily: \"Monospace\" }}>Loading</h2>\n        </Center>\n        <Center mt={5}>\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </Center>\n      </Flex>\n    </>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Tooltip,\n  Button,\n  Image,\n  Box,\n  Input,\n  Flex,\n  Textarea,\n  Container,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay\n} from \"@chakra-ui/react\";\nimport userIcon from \"../icons/user.svg\";\nimport { deleteRemoteUserData, getRemoteUserData } from \"../utils\";\nimport Loading from \"../components/Loading\";\n\nconst UserPage = ({ authToken, userInfo, setUserInfo, setIsLogin }) => {\n  const { userId } = useParams();\n  const [UIState, setUIState] = useState(\"idle\");\n  // five state: idle, success, error, loading, pageLoading\n  const [userData, setUserData] = useState({\n    username: null,\n    description: null,\n    pictureUrl: null\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    setUIState(\"pageLoading\");\n    getRemoteUserData(userId)\n      .then((res) => {\n        const user = res.data.result;\n        setUserData({\n          ...userData,\n          username: user.username,\n          description: user.description,\n          pictureUrl: user.picture_url\n        });\n        setUserInfo({\n          ...userInfo,\n          pictureUrl: user.picture_url\n        });\n        console.log(res);\n        setUIState(\"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setUIState(\"error\");\n      });\n  }, [userId]);\n  const handleEditClick = () => {\n    // redirect to userList page\n    history.push(`/users/${userId}/edit`);\n  };\n  const handleDeleteClick = () => {\n    setUIState(\"loading\");\n    deleteRemoteUserData({ userId, authToken })\n      .then((res) => {\n        console.log(res);\n\n        setUIState(\"success\");\n        // auto-logout\n        setIsLogin(false);\n        // clear token\n        localStorage.clear();\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setUIState(\"error\");\n      });\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const cancelRef = React.useRef();\n  const onClose = () => setIsOpen(false);\n\n  if (UIState === \"pageLoading\") {\n    return <Loading />;\n  } else if (UIState === \"error\") {\n    return <Container>Some error occured! Please try again.</Container>;\n  } else {\n    return (\n      <Flex direction=\"column\" align=\"center\">\n        <Image\n          src={userData.pictureUrl ? userData.pictureUrl : userIcon}\n          w={[150, 200, 250]}\n          p={5}\n        ></Image>\n\n        <Box mt={5}>{userData.username}</Box>\n        <Box mt={5}>{userData.description}</Box>\n\n        <Flex mt={7} w={[150, 200, 250]} justify=\"space-around\">\n          <Button\n            m={2}\n            onClick={handleEditClick}\n            disabled={!(userInfo.userId === userId)}\n          >\n            編輯\n          </Button>\n          <Button\n            m={2}\n            colorScheme=\"blue\"\n            isLoading={UIState === \"loading\"}\n            loadingText=\"Deleting\"\n            onClick={() => {\n              setIsOpen(true);\n            }}\n            disabled={!(userInfo.userId === userId)}\n          >\n            刪除此用戶\n          </Button>\n          <AlertDialog\n            isOpen={isOpen}\n            leastDestructiveRef={cancelRef}\n            onClose={onClose}\n          >\n            <AlertDialogOverlay>\n              <AlertDialogContent>\n                <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                  Delete User\n                </AlertDialogHeader>\n\n                <AlertDialogBody>\n                  Are you sure? You can't undo this action afterwards. <br />{\" \"}\n                  Note: After deleting, you'll be auto logout.\n                </AlertDialogBody>\n\n                <AlertDialogFooter>\n                  <Button ref={cancelRef} onClick={onClose}>\n                    Cancel\n                  </Button>\n                  <Button colorScheme=\"red\" onClick={handleDeleteClick} ml={3}>\n                    Delete\n                  </Button>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialogOverlay>\n          </AlertDialog>\n        </Flex>\n      </Flex>\n    );\n  }\n};\nexport default UserPage;\n","import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Button,\n  useToast,\n  Image,\n  Box,\n  Input,\n  Flex,\n  Textarea\n} from \"@chakra-ui/react\";\nimport userIcon from \"../icons/user.svg\";\nimport { updateRemoteUserData } from \"../utils\";\n\nconst UserPageEdit = ({ authToken, userInfo, setUserInfo }) => {\n  const { userId } = useParams();\n  const [UIState, setUIState] = useState(\"success\");\n  const [userInput, setUserInput] = useState({\n    username: userInfo.username,\n    description: null,\n    pictureUrl: userInfo.pictureUrl\n  });\n  const [usernameIsChange, setUsernameIsChange] = useState(false);\n  const history = useHistory();\n  const handleCancelClick = () => {\n    // redirect to userList page\n    history.push(\"/users\");\n  };\n  const toast = useToast();\n  const callToast = (err) => {\n    toast({\n      title: \"An error occurred!\",\n      description: `${err}. Please try again or choose another Picture!`,\n      status: \"error\",\n      duration: 3000,\n      isClosable: true,\n      position: \"top\"\n    });\n  };\n  const handleSubmitClick = () => {\n    setUIState(\"loading\");\n    updateRemoteUserData({ data: userInput, userId, authToken })\n      .then((res) => {\n        console.log(res);\n        if (res.data.result === null) {\n          const errorCode = res.data.message;\n          throw new Error(errorCode);\n        }\n        setUserInfo({\n          ...userInfo,\n          username: userInput.username,\n          pictureUrl: userInput.pictureUrl\n        });\n        setUIState(\"success\");\n        localStorage.setItem(\n          \"userInfo\",\n          JSON.stringify({\n            ...userInfo,\n            username: userInput.username,\n            pictureUrl: userInput.pictureUrl\n          })\n        );\n        history.push(\"/users\");\n      })\n      .catch((err) => {\n        console.log(err);\n        callToast(err);\n\n        setUIState(\"error\");\n      });\n  };\n  const hiddenFileInput = React.useRef(null);\n\n  const handleButtonClick = () => {\n    hiddenFileInput.current.click();\n  };\n  const handleFile = async (e) => {\n    const fileo = e.target.files[0];\n    let reader = new FileReader();\n    reader.onload = (r) => {\n      setUserInput({\n        ...userInput,\n        pictureUrl: r.target.result\n      });\n    };\n    reader.readAsDataURL(fileo);\n    setUIState(\"success\");\n  };\n  const handleDescription = (e) => {\n    setUserInput({\n      ...userInput,\n      description: e.target.value\n    });\n  };\n\n  const handleUsername = (e) => {\n    setUsernameIsChange(true);\n    setUserInput({\n      ...userInput,\n      username: e.target.value\n    });\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"center\">\n      <Image\n        src={userInput.pictureUrl ? userInput.pictureUrl : userIcon}\n        w={[150, 200, 250]}\n        p={5}\n      ></Image>\n      <Flex w={[150, 200, 250]} justify=\"space-between\">\n        <Button onClick={handleButtonClick}>上傳頭貼</Button>\n        <Input\n          type=\"file\"\n          ref={hiddenFileInput}\n          onChange={handleFile}\n          style={{ display: \"none\" }}\n        />\n        <Box ml={3} p={2}>\n          上限300KB\n        </Box>\n      </Flex>\n      <Input\n        w={[150, 200, 250]}\n        type=\"username\"\n        placeholder=\"使用者名稱\"\n        mt={7}\n        onChange={handleUsername}\n        value={!usernameIsChange ? userInfo.username : null}\n      />\n\n      <Textarea\n        mt={7}\n        placeholder=\"Write an impressive self-introduction here!\"\n        w=\"60%\"\n        h=\"200px\"\n        onChange={handleDescription}\n      />\n      <Flex mt={7} w={[150, 200, 250]} justify=\"space-around\">\n        <Button onClick={handleCancelClick}>取消</Button>\n        <Button\n          ml={5}\n          colorScheme=\"blue\"\n          isLoading={UIState === \"loading\"}\n          loadingText=\"Submitting\"\n          onClick={handleSubmitClick}\n          disabled={!userInput.username}\n        >\n          儲存\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\nexport default UserPageEdit;\n","import React from \"react\";\nimport { Link as ReachLink } from \"react-router-dom\";\nimport { Box, Flex, Link, Container, Button, Center } from \"@chakra-ui/react\";\n\nconst MemberTabs = ({ selectState }) => {\n  return (\n    // <div>hfdjsljfds</div>fdsafds\n    <Flex justify=\"center\" align=\"flex-end\" height=\"40vh\">\n      <Box m={8}>\n        <Center>\n          <Link\n            as={ReachLink}\n            to=\"/login\"\n            borderBottom=\"5px solid transparent\"\n            style={\n              selectState === \"login\"\n                ? { color: \"#3182CE\", borderColor: \"#3182CE\" }\n                : {}\n            }\n            _hover={{\n              color: \"blue.500\"\n            }}\n          >\n            會員登入\n          </Link>\n        </Center>\n      </Box>\n      <Box m={8}>\n        <Center>\n          <Link\n            as={ReachLink}\n            to=\"/signup\"\n            borderBottom=\"5px solid transparent\"\n            _hover={{\n              color: \"blue.500\"\n            }}\n            style={\n              selectState === \"signup\"\n                ? { color: \"#3182CE\", borderColor: \"#3182CE\" }\n                : {}\n            }\n          >\n            加入會員\n          </Link>\n        </Center>\n      </Box>\n    </Flex>\n  );\n};\nexport default MemberTabs;\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Flex,\n  Link,\n  Container,\n  Button,\n  Center\n} from \"@chakra-ui/react\";\nimport { useHistory, Link as ReachLink } from \"react-router-dom\";\n\nconst Nav = ({ isLogin, setIsLogin, setIsLoginPage, userInfo }) => {\n  const history = useHistory();\n  const handleSigninClick = () => {\n    setIsLoginPage(true);\n    history.push(\"/login\");\n  };\n  const handleSignoutClick = () => {\n    setIsLoginPage(false);\n    setIsLogin(false);\n    // clear token\n    localStorage.clear();\n    history.push(\"/\");\n  };\n\n  return (\n    <Flex mb={5} bg=\"tomato\" w=\"100%\" p={3} justify=\"space-between\">\n      <Link as={ReachLink} to=\"/users\">\n        Home\n      </Link>\n      {isLogin === true ? (\n        <Flex>\n          <Link as={ReachLink} to={`/users/${userInfo.userId}`} pt={1}>\n            {userInfo.username}\n          </Link>\n          <Button ml={3} size=\"sm\" onClick={handleSignoutClick}>\n            登出\n          </Button>\n        </Flex>\n      ) : (\n        <Button size=\"sm\" onClick={handleSigninClick}>\n          登入\n        </Button>\n      )}\n    </Flex>\n  );\n};\nexport default Nav;\n","import React from \"react\";\nimport userIcon from \"../icons/user.svg\";\n\nimport {\n  Wrap,\n  WrapItem,\n  Image,\n  Box,\n  Flex,\n  Link,\n  Container,\n  Button,\n  Center\n} from \"@chakra-ui/react\";\nconst UserItem = ({ user, setSelectedId }) => {\n  const handleUserClick = () => {\n    setSelectedId(user.id);\n  };\n  return (\n    <WrapItem\n      key={user.id}\n      ml={5}\n      mt={5}\n      as=\"button\"\n      onClick={handleUserClick}\n      border=\"5px solid orange\"\n      boxShadow=\"2xl\"\n      rounded=\"lg\"\n      _hover={{\n        boxShadow: \"dark-lg\"\n      }}\n    >\n      <Flex direction=\"column\" m={2}>\n        <Image\n          src={user.picture_url ? user.picture_url : userIcon}\n          boxSize=\"200px\"\n        />\n        <Center m={2}>{user.username}</Center>\n      </Flex>\n    </WrapItem>\n  );\n};\nexport default UserItem;\n","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { getRemoteUsersData } from \"../utils\";\nimport { Wrap, Container } from \"@chakra-ui/react\";\nimport UserItem from \"../components/UserItem\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserListPage = () => {\n  const [UIState, setUIState] = useState(\"loading\");\n  const [userList, setUserList] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    setUIState(\"loading\");\n    getRemoteUsersData()\n      .then((res) => {\n        if (res.data.result === null) {\n          throw new Error(res.data.message);\n        }\n        console.log(res);\n        setUserList(res.data.result);\n        setUIState(\"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setUIState(\"error\");\n      });\n  }, []);\n  useEffect(() => {\n    if (selectedId !== null) {\n      history.push(`/users/${selectedId}`);\n    }\n  }, [selectedId]);\n  if (UIState === \"loading\") {\n    return <Loading />;\n  } else if (UIState === \"error\") {\n    return <Container>Something is wrong..., please try again.</Container>;\n  } else {\n    return (\n      <Wrap>\n        {userList.map((user) => {\n          return (\n            <UserItem key={user.id} user={user} setSelectedId={setSelectedId} />\n          );\n        })}\n      </Wrap>\n    );\n  }\n};\nexport default UserListPage;\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport {\n  BrowserRouter,\n  Link as ReachLink,\n  Redirect,\n  Route,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\nimport LoginPage from \"./LoginPage\";\nimport SignUpPage from \"./SignUpPage\";\nimport UserPage from \"./UserPage\";\nimport UserPageEdit from \"./UserPage/Edit\";\n\nimport MemberTabs from \"./components/MemberTabs\";\nimport Nav from \"./components/Nav\";\nimport UserListPage from \"./UserListPage\";\n\nexport default function App() {\n  const [selectState, setSelectState] = useState(\"idle\");\n  // three state: idle, login, signup, use for signup Page\n\n  // check if it's a login/signup page (need header or not)\n  const [showHeader, setShowHeader] = useState(false);\n\n  // check if a user is login or not\n  const [isLogin, setIsLogin] = useState(false);\n  // get authToken\n  const [authToken, setAuthToken] = useState(null);\n  // record the current login user info\n  const [userInfo, setUserInfo] = useState({\n    userId: null,\n    username: null,\n    pictureUrl: null\n  });\n  useEffect(() => {\n    // store login token and username\n    const localToken = localStorage.getItem(\"token\");\n    const localUserInfo = localStorage.getItem(\"userInfo\");\n    // console.log(localUserInfo);\n    if (localToken !== null) {\n      // use local info\n      setAuthToken(JSON.parse(localToken));\n      setIsLogin(true);\n      setUserInfo(JSON.parse(localUserInfo));\n    }\n  }, []);\n  // console.log(isLogin);\n  // console.log(authToken);\n  // console.log(userInfo);\n  // console.log(localStorage.getItem(\"userInfo\"));\n  return (\n    <>\n      <BrowserRouter>\n        {showHeader === true ? (\n          <MemberTabs selectState={selectState} />\n        ) : (\n          <Nav\n            setIsLoginPage={setShowHeader}\n            isLogin={isLogin}\n            setIsLogin={setIsLogin}\n            userInfo={userInfo}\n          />\n        )}\n        <Switch>\n          <Route key=\"0\" path=\"/\" exact>\n            <Redirect to=\"/users/\" />\n          </Route>\n          <Route key=\"1\" path=\"login\">\n            <LoginPage\n              setSelectState={setSelectState}\n              setIsLogin={setIsLogin}\n              setIsLoginPage={setShowHeader}\n              setAuthToken={setAuthToken}\n              setUserInfo={setUserInfo}\n            />\n          </Route>\n          <Route key=\"2\" path=\"signup\">\n            <SignUpPage\n              setSelectState={setSelectState}\n              setIsLogin={setIsLogin}\n              setIsLoginPage={setShowHeader}\n              setAuthToken={setAuthToken}\n              setUserInfo={setUserInfo}\n            />\n          </Route>\n          <Route key=\"3\" path=\"users/\" exact>\n            {isLogin === true && <UserListPage />}\n          </Route>\n          <Route key=\"4\" path=\"users/:userId\" exact>\n            <UserPage\n              authToken={authToken}\n              userInfo={userInfo}\n              setIsLogin={setIsLogin}\n              setUserInfo={setUserInfo}\n            />\n          </Route>\n          <Route key=\"5\" path=\"users/:userId/edit\">\n            <UserPageEdit\n              authToken={authToken}\n              userInfo={userInfo}\n              setUserInfo={setUserInfo}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  rootElement\n);\n\n// TODO:\n/*\n\n\n\n*/\n","module.exports = __webpack_public_path__ + \"static/media/user.e7875f01.svg\";"],"sourceRoot":""}